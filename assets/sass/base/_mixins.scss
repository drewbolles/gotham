////
/// Theme mixins
/// These are basic mixins that power the stylesheets by default. Feel free
/// to add / remove any as needed. More specific mixins can go in the
/// partials they effect.
///
/// @author Drew Bolles
////

/// Spit out 'rem' and 'px' font size in one go
///
/// @access public
///
/// @param {int} $size - Size of font being passed in
@mixin font-size($size: $base-font-size) {
  font-size: $size;
  font-size: $size / $base-font-size * 1rem; // 1rem;
}


/// Apply hover & focus at same time.
///
/// @access public
///
/// @param {boolean} $active - Whether or not to apply to styles to an '.active'
///                            class.
///
/// @content [Hover styles]
@mixin hover($active: false) {
  @if($active == true) {
    &:hover,
    &:focus,
    &.active {
      @content;
    }
  } @else {
    &:hover,
    &:focus {
      @content;
    }
  }
}


/// Set bottom margin based on spacing unit
///
/// @access public
///
/// @param {int} $multiplier - Integer to multiply base spacing unit by
@mixin vr($multiplier: 1) {
  margin-bottom: $multiplier * $base-spacing-unit;
}



/// Applies micro clearfix to elements
///
/// @access public
@mixin clearfix() {
  &:after,
  &:before {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
} 


/// Invisible from screen but visible to screen readers
///
/// @access public
@mixin visuallyhidden() {
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  position: absolute !important;
  overflow: hidden !important;
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
}



/// Style placeholder text in one swoop
///
/// @access public
/// @content [Placeholder styles]
@mixin placeholder() {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder { /* Firefox 18- */
    @content;
  }
  ::-moz-placeholder {  /* Firefox 19+ */
    @content;
  }
  :-ms-input-placeholder {  
    @content;
  }
}